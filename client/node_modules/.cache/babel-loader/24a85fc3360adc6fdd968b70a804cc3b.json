{"ast":null,"code":"var _jsxFileName = \"/Users/stonefranklin/code/web/2048/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport { Grid, Container, Button } from '@material-ui/core';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  let emptySquares = [];\n\n  for (let i = 0; i < 16; i++) {\n    emptySquares.push(i);\n  }\n\n  const [positions, setPositions] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n\n  function reset() {\n    setPositions([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n  }\n\n  function changeValue(row, col, value) {\n    let temp = positions;\n    temp[row][col] = value;\n    setPositions(temp);\n  }\n\n  function randomPosition() {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (positions[row][col] === 0) {\n      return [row, col];\n    }\n\n    return randomPosition();\n  }\n\n  function startSquares() {\n    reset();\n    const pos1 = randomPosition();\n    const pos2 = randomPosition();\n    changeValue(pos1[0], pos1[1], 2);\n    changeValue(pos2[0], pos2[1], 2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"play-button\",\n      variant: \"contained\",\n      onClick: () => startSquares(),\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: positions.map(row => row.map(value => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 3,\n          spacing: 0,\n          children: /*#__PURE__*/_jsxDEV(Square, {\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"j2M47UwfU8wgU0ZGWNzee1gV/f8=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/stonefranklin/code/web/2048/client/src/components/Board.js"],"names":["React","useState","Square","Grid","Container","Button","Board","emptySquares","i","push","positions","setPositions","reset","changeValue","row","col","value","temp","randomPosition","Math","floor","random","startSquares","pos1","pos2","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Square from './Square';\nimport { Grid, Container, Button } from '@material-ui/core';\nimport '../styles.css';\n\nfunction Board() {\n    let emptySquares = []\n    for (let i = 0; i < 16; i++) {\n        emptySquares.push(i)\n    }\n\n    const [positions, setPositions] = useState(\n        [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0]\n        ]\n    );\n\n    function reset() {\n        setPositions(\n            [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ]\n        );\n    }\n\n    function changeValue(row, col, value) {\n        let temp = positions;\n        temp[row][col] = value;\n        setPositions(temp);\n    }\n\n    function randomPosition() {\n        const row = Math.floor(Math.random() * 4);\n        const col = Math.floor(Math.random() * 4);\n\n        if(positions[row][col] === 0) {\n            return [row, col]\n        }\n        \n        return randomPosition();\n    }\n\n    function startSquares() {\n        reset();\n        \n        const pos1 = randomPosition();\n        const pos2 = randomPosition();\n\n        changeValue(pos1[0], pos1[1], 2);\n        changeValue(pos2[0], pos2[1], 2);\n    }\n    \n    return (\n        <Container maxWidth=\"xs\">\n            <Button className=\"play-button\" variant=\"contained\" onClick={() => startSquares()}>Play</Button>\n            <div className=\"board\">\n                <Grid \n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    \n                >\n                    {positions.map(row => \n                        row.map(value => \n                            <Grid container item xs={3} spacing={0} >\n                                <Square value={value} />\n                            </Grid>\n                        )\n                    )}\n                </Grid>\n            </div>\n        </Container>\n    )\n    \n    \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}