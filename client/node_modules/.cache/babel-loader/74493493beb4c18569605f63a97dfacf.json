{"ast":null,"code":"var _jsxFileName = \"/Users/stonefranklin/code/web/2048/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport EmptySquare from './EmptySquare';\nimport { Grid, Container } from '@material-ui/core';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  let emptySquares = [];\n\n  for (let i = 0; i < 16; i++) {\n    emptySquares.push(i);\n  }\n\n  const [positions, setPositions] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n\n  function reset() {\n    setPositions([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n  }\n\n  function startSquares() {\n    reset;\n    const x1 = Math.floor(Math.random() * 4);\n    const x2 = Math.floor(Math.random() * 4);\n    const y1 = Math.floor(Math.random() * 4);\n    const y2 = Math.floor(Math.random() * 4);\n    positions[x1][y1] = 2;\n    positions[x2][y2] = 2;\n    console.log(positions);\n  }\n\n  startSquares();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: emptySquares.map(square => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 3,\n          spacing: 0,\n          children: /*#__PURE__*/_jsxDEV(EmptySquare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"j2M47UwfU8wgU0ZGWNzee1gV/f8=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/stonefranklin/code/web/2048/client/src/components/Board.js"],"names":["React","useState","Square","EmptySquare","Grid","Container","Board","emptySquares","i","push","positions","setPositions","reset","startSquares","x1","Math","floor","random","x2","y1","y2","console","log","map","square"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,OAAO,eAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,IAAAA,YAAY,CAACE,IAAb,CAAkBD,CAAlB;AACH;;AAED,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CACtC,CACI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADJ,EAEI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFJ,EAGI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHJ,EAII,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJJ,CADsC,CAA1C;;AASA,WAASW,KAAT,GAAiB;AACbD,IAAAA,YAAY,CACR,CACI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADJ,EAEI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFJ,EAGI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHJ,EAII,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJJ,CADQ,CAAZ;AAQH;;AAED,WAASE,YAAT,GAAwB;AACpBD,IAAAA,KAAK;AACL,UAAME,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AACA,UAAMC,EAAE,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AAEA,UAAME,EAAE,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AACA,UAAMG,EAAE,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AAEAP,IAAAA,SAAS,CAACI,EAAD,CAAT,CAAcK,EAAd,IAAoB,CAApB;AACAT,IAAAA,SAAS,CAACQ,EAAD,CAAT,CAAcE,EAAd,IAAoB,CAApB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACH;;AAGDG,EAAAA,YAAY;AACZ,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAE,CAFb;AAGI,QAAA,SAAS,EAAC,KAHd;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,UAAU,EAAC,QALf;AAAA,kBAQKN,YAAY,CAACgB,GAAb,CAAiBC,MAAM,iBACpB,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,OAAO,EAAE,CAArC;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhEQlB,K;;KAAAA,K;AAkET,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Square from './Square';\nimport EmptySquare from './EmptySquare'\nimport { Grid, Container } from '@material-ui/core';\nimport '../styles.css';\n\nfunction Board() {\n    let emptySquares = []\n    for (let i = 0; i < 16; i++) {\n        emptySquares.push(i)\n    }\n\n    const [positions, setPositions] = useState(\n        [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0]\n        ]\n    );\n\n    function reset() {\n        setPositions(\n            [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ]\n        );\n    }\n\n    function startSquares() {\n        reset\n        const x1 = Math.floor(Math.random() * 4);\n        const x2 = Math.floor(Math.random() * 4);\n\n        const y1 = Math.floor(Math.random() * 4);\n        const y2 = Math.floor(Math.random() * 4);\n\n        positions[x1][y1] = 2;\n        positions[x2][y2] = 2;\n\n        console.log(positions);\n    }\n    \n\n    startSquares();\n    return (\n        <Container maxWidth=\"xs\">\n            <div className=\"board\">\n                <Grid \n                    container\n                    spacing={1}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    \n                >\n                    {emptySquares.map(square => \n                        <Grid container item xs={3} spacing={0}>\n                            <EmptySquare />\n                        </Grid>\n                    )}\n                </Grid>\n            </div>\n        </Container>\n    )\n    \n    \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}